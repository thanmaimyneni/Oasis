
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error, r2_score
from sklearn.preprocessing import LabelEncoder
data = pd.read_csv('car_price_data.csv')  
print("Dataset Preview:")
print(data.head())
print("\nMissing Values:")
print(data.isnull().sum())
data.fillna(data.mean(), inplace=True)


label_encoder = LabelEncoder()
categorical_columns = ['Brand', 'Fuel_Type'] 

for col in categorical_columns:
    data[col] = label_encoder.fit_transform(data[col])
print("\nCleaned Data:")
print(data.head())
X = data.drop(columns=['Price'], axis=1) 
y = data['Price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mae = mean_absolute_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("\nModel Evaluation:")
print(f"Mean Absolute Error (MAE): {mae}")
print(f"R-squared (R2) Score: {r2}")
importances = model.feature_importances_
features = X.columns

plt.figure(figsize=(10, 6))
sns.barplot(x=importances, y=features)
plt.title("Feature Importance")
plt.xlabel("Importance")
plt.ylabel("Feature")
plt.show()
import joblib

# Save the trained model for future use
joblib.dump(model, 'car_price_model.pkl')
new_car = np.array([3, 0, 1, 150, 18])
new_car = new_car.reshape(1, -1)
predicted_price = model.predict(new_car)
print(f"\nPredicted Price for the new car: {predicted_price[0]}")

